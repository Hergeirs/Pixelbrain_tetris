{"ast":null,"code":"import _classCallCheck from \"/Users/torkildjurhuus/Code/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torkildjurhuus/Code/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n// if (typeof require.context === \"undefined\") {\n//   const fs = require(\"fs\");\n//   const path = require(\"path\");\n//   require.context = (\n//     base = \".\",\n//     scanSubDirectories = false,\n//     regularExpression = /\\.js$/\n//   ) => {\n//     const files = {};\n//     function readDirectory(directory) {\n//       fs.readdirSync(directory).forEach(file => {\n//         const fullPath = path.resolve(directory, file);\n//         if (fs.statSync(fullPath).isDirectory()) {\n//           if (scanSubDirectories) readDirectory(fullPath);\n//           return;\n//         }\n//         if (!regularExpression.test(fullPath)) return;\n//         files[fullPath] = true;\n//       });\n//     }\n//     readDirectory(path.resolve(__dirname, base));\n//     function Module(file) {\n//       return require(file);\n//     }\n//     Module.keys = () => Object.keys(files);\n//     return Module;\n//   };\n// }\nvar ResourceManager =\n/*#__PURE__*/\nfunction () {\n  _createClass(ResourceManager, [{\n    key: \"importAll\",\n    value: function importAll(r) {\n      var images = {};\n      r.keys().map(function (item, index) {\n        images[item.replace(\"./\", \"\")] = r(item);\n      });\n      return images;\n    }\n  }]);\n\n  function ResourceManager(GameName) {\n    var _this = this;\n\n    _classCallCheck(this, ResourceManager);\n\n    this.getImage = function (name) {\n      return _this.images[name];\n    };\n\n    this.getAudioPath = function (index) {\n      return _this.audio[index];\n    };\n\n    this.getFont = function (font) {\n      return _this.fonts[font];\n    };\n\n    this.GameInstance = GameName;\n    var images = this.importAll(require.context(\"./../Resources/Images\", false, /\\.(png|jpe?g|svg|gif)$/));\n    this.images = images;\n    var audio = this.importAll(require.context(\"./../Resources/sounds\", false, /\\.(wav|mp3)$/));\n    this.audio = audio;\n    var fonts = this.importAll(require.context(\"./../Resources/fonts\", false, /\\.(ttf)$/));\n    this.fonts = fonts;\n  }\n\n  return ResourceManager;\n}();\n\nexport default ResourceManager;","map":{"version":3,"sources":["/Users/torkildjurhuus/Code/Pixelbrain_tetris/src/Resource Manager/Resource Manager.js"],"names":["ResourceManager","r","images","keys","map","item","index","replace","GameName","getImage","name","getAudioPath","audio","getFont","font","fonts","GameInstance","importAll","require","context"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;IAEMA,e;;;;;8BACMC,C,EAAG;AACX,UAAIC,MAAM,GAAG,EAAb;AACAD,MAAAA,CAAC,CAACE,IAAF,GAASC,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC5BJ,QAAAA,MAAM,CAACG,IAAI,CAACE,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAD,CAAN,GAAiCN,CAAC,CAACI,IAAD,CAAlC;AACD,OAFD;AAGA,aAAOH,MAAP;AACD;;;AAED,2BAAYM,QAAZ,EAAsB;AAAA;;AAAA;;AAAA,SAoBtBC,QApBsB,GAoBX,UAAAC,IAAI,EAAI;AACjB,aAAO,KAAI,CAACR,MAAL,CAAYQ,IAAZ,CAAP;AACD,KAtBqB;;AAAA,SAwBtBC,YAxBsB,GAwBP,UAAAL,KAAK,EAAI;AACtB,aAAO,KAAI,CAACM,KAAL,CAAWN,KAAX,CAAP;AACD,KA1BqB;;AAAA,SA4BtBO,OA5BsB,GA4BZ,UAAAC,IAAI,EAAI;AAChB,aAAO,KAAI,CAACC,KAAL,CAAWD,IAAX,CAAP;AACD,KA9BqB;;AACpB,SAAKE,YAAL,GAAoBR,QAApB;AAEA,QAAMN,MAAM,GAAG,KAAKe,SAAL,CACbC,OAAO,CAACC,OAAR,CAAgB,uBAAhB,EAAyC,KAAzC,EAAgD,wBAAhD,CADa,CAAf;AAGA,SAAKjB,MAAL,GAAcA,MAAd;AAEA,QAAMU,KAAK,GAAG,KAAKK,SAAL,CACZC,OAAO,CAACC,OAAR,CAAgB,uBAAhB,EAAyC,KAAzC,EAAgD,cAAhD,CADY,CAAd;AAGA,SAAKP,KAAL,GAAaA,KAAb;AAEA,QAAMG,KAAK,GAAG,KAAKE,SAAL,CACZC,OAAO,CAACC,OAAR,CAAgB,sBAAhB,EAAwC,KAAxC,EAA+C,UAA/C,CADY,CAAd;AAIA,SAAKJ,KAAL,GAAaA,KAAb;AACD;;;;;AAeH,eAAef,eAAf","sourcesContent":["// if (typeof require.context === \"undefined\") {\n//   const fs = require(\"fs\");\n//   const path = require(\"path\");\n\n//   require.context = (\n//     base = \".\",\n//     scanSubDirectories = false,\n//     regularExpression = /\\.js$/\n//   ) => {\n//     const files = {};\n\n//     function readDirectory(directory) {\n//       fs.readdirSync(directory).forEach(file => {\n//         const fullPath = path.resolve(directory, file);\n\n//         if (fs.statSync(fullPath).isDirectory()) {\n//           if (scanSubDirectories) readDirectory(fullPath);\n\n//           return;\n//         }\n\n//         if (!regularExpression.test(fullPath)) return;\n\n//         files[fullPath] = true;\n//       });\n//     }\n\n//     readDirectory(path.resolve(__dirname, base));\n\n//     function Module(file) {\n//       return require(file);\n//     }\n\n//     Module.keys = () => Object.keys(files);\n\n//     return Module;\n//   };\n// }\n\nclass ResourceManager {\n  importAll(r) {\n    let images = {};\n    r.keys().map((item, index) => {\n      images[item.replace(\"./\", \"\")] = r(item);\n    });\n    return images;\n  }\n\n  constructor(GameName) {\n    this.GameInstance = GameName;\n\n    const images = this.importAll(\n      require.context(\"./../Resources/Images\", false, /\\.(png|jpe?g|svg|gif)$/)\n    );\n    this.images = images;\n\n    const audio = this.importAll(\n      require.context(\"./../Resources/sounds\", false, /\\.(wav|mp3)$/)\n    );\n    this.audio = audio;\n\n    const fonts = this.importAll(\n      require.context(\"./../Resources/fonts\", false, /\\.(ttf)$/)\n    );\n\n    this.fonts = fonts;\n  }\n\n  getImage = name => {\n    return this.images[name];\n  };\n\n  getAudioPath = index => {\n    return this.audio[index];\n  };\n\n  getFont = font => {\n    return this.fonts[font];\n  };\n}\n\nexport default ResourceManager;\n"]},"metadata":{},"sourceType":"module"}