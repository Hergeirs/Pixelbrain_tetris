{"ast":null,"code":"import _classCallCheck from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\nimport Cubes from \"./Cubes\";\nimport React from \"react\";\nimport Timer from \"../../../../Timer/Timer\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\nimport Vector from \"../../../../Vector/Vector\";\n\nvar Tetris =\n/*#__PURE__*/\nfunction (_GameComponent) {\n  _inherits(Tetris, _GameComponent);\n\n  function Tetris() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tetris);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tetris)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.addCubes = function () {\n      _this.children.push(React.createElement(Cubes, {\n        position: new Vector([40, 0]),\n        name: \"Cubes\"\n      }));\n\n      console.log(_this.children);\n      Timer.instance.subscribeToTime(_this.addCubes, 3000);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tetris, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      _get(_getPrototypeOf(Tetris.prototype), \"componentDidMount\", this).call(this);\n\n      this.children = [];\n      this.addCubes();\n    }\n  }]);\n\n  return Tetris;\n}(GameComponent);\n\nexport default WithWorld(Tetris);","map":{"version":3,"sources":["/home/hergeirs/Setri/ForritaVerkfrøði/Pixelbrain_tetris/src/Resources/Games/Tetris/GameComponents/Tetris.js"],"names":["GameComponent","Cubes","React","Timer","WithWorld","Vector","Tetris","addCubes","children","push","createElement","position","name","console","log","instance","subscribeToTime"],"mappings":";;;;;;AAAA,OAAOA,aAAP,MAA0B,sCAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;IAEMC,M;;;;;;;;;;;;;;;;;;UAQJC,Q,GAAW,YAAM;AACf,YAAKC,QAAL,CAAcC,IAAd,CACEP,KAAK,CAACQ,aAAN,CAAoBT,KAApB,EAA2B;AACzBU,QAAAA,QAAQ,EAAE,IAAIN,MAAJ,CAAW,CAAC,EAAD,EAAK,CAAL,CAAX,CADe;AAEzBO,QAAAA,IAAI,EAAE;AAFmB,OAA3B,CADF;;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,QAAjB;AACAL,MAAAA,KAAK,CAACY,QAAN,CAAeC,eAAf,CAA+B,MAAKT,QAApC,EAA8C,IAA9C;AACD,K;;;;;;;wCAhBmB;AAClB;;AACA,WAAKC,QAAL,GAAgB,EAAhB;AAEA,WAAKD,QAAL;AACD;;;;EANkBP,a;;AAoBrB,eAAeI,SAAS,CAACE,MAAD,CAAxB","sourcesContent":["import GameComponent from \"../../../../GameObject/GameComponent\";\nimport Cubes from \"./Cubes\";\nimport React from \"react\";\nimport Timer from \"../../../../Timer/Timer\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\nimport Vector from \"../../../../Vector/Vector\";\n\nclass Tetris extends GameComponent {\n  componentDidMount() {\n    super.componentDidMount();\n    this.children = [];\n\n    this.addCubes();\n  }\n\n  addCubes = () => {\n    this.children.push(\n      React.createElement(Cubes, {\n        position: new Vector([40, 0]),\n        name: \"Cubes\"\n      })\n    );\n    console.log(this.children);\n    Timer.instance.subscribeToTime(this.addCubes, 3000);\n  };\n}\n\nexport default WithWorld(Tetris);\n"]},"metadata":{},"sourceType":"module"}